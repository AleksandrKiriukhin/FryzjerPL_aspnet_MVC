<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Zastosuj" xml:space="preserve">
    <value>Zastosuj</value>
  </data>
  <data name="Zarządzaj rezerwacjami, klientami i usługami w jednym miejscu." xml:space="preserve">
    <value>Zarządzaj rezerwacjami, klientami i usługami w jednym miejscu.</value>
  </data>
  <data name="Zarezerwuj Teraz!" xml:space="preserve">
    <value>Zarezerwuj Teraz!</value>
  </data>
  <data name="Zapisz" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="Wróć do listy usług" xml:space="preserve">
    <value>Wróć do listy usług</value>
  </data>
  <data name="Wróć do listy rezerwacji" xml:space="preserve">
    <value>Wróć do listy rezerwacji</value>
  </data>
  <data name="Wróć do listy pracowników" xml:space="preserve">
    <value>Wróć do listy pracowników</value>
  </data>
  <data name="Wróć do listy klientów" xml:space="preserve">
    <value>Wróć do listy klientów</value>
  </data>
  <data name="Witamy na FryzjerPL!" xml:space="preserve">
    <value>Witamy na FryzjerPL!</value>
  </data>
  <data name="Utwórz użytkownika" xml:space="preserve">
    <value>Utwórz użytkownika</value>
  </data>
  <data name="Usuwanie usługi" xml:space="preserve">
    <value>Usuwanie usługi</value>
  </data>
  <data name="Usuwanie pracownika" xml:space="preserve">
    <value>Usuwanie pracownika</value>
  </data>
  <data name="Usuń użytkownika" xml:space="preserve">
    <value>Usuń użytkownika</value>
  </data>
  <data name="Usuń rezerwację" xml:space="preserve">
    <value>Usuń rezerwację</value>
  </data>
  <data name="Usuń klienta" xml:space="preserve">
    <value>Usuń klienta</value>
  </data>
  <data name="Usuń" xml:space="preserve">
    <value>Usuń</value>
  </data>
  <data name="Telefon" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Rola" xml:space="preserve">
    <value>Rola</value>
  </data>
  <data name="Nazwisko" xml:space="preserve">
    <value>Nazwisko</value>
  </data>
  <data name="Nazwa usługi" xml:space="preserve">
    <value>Nazwa usługi</value>
  </data>
  <data name="Lista użytkowników" xml:space="preserve">
    <value>Lista użytkowników</value>
  </data>
  <data name="Lista usług" xml:space="preserve">
    <value>Lista usług</value>
  </data>
  <data name="Lista rezerwacji" xml:space="preserve">
    <value>Lista rezerwacji</value>
  </data>
  <data name="Lista pracowników" xml:space="preserve">
    <value>Lista pracowników</value>
  </data>
  <data name="Lista klientów" xml:space="preserve">
    <value>Lista klientów</value>
  </data>
  <data name="Imię" xml:space="preserve">
    <value>Imię</value>
  </data>
  <data name="Ilość na stronę" xml:space="preserve">
    <value>Ilość na stronę</value>
  </data>
  <data name="ID usługi" xml:space="preserve">
    <value>ID usługi</value>
  </data>
  <data name="ID pracownika" xml:space="preserve">
    <value>ID pracownika</value>
  </data>
  <data name="ID klienta" xml:space="preserve">
    <value>ID klienta</value>
  </data>
  <data name="Hasło" xml:space="preserve">
    <value>Hasło</value>
  </data>
  <data name="Edytuj usługę" xml:space="preserve">
    <value>Edytuj usługę</value>
  </data>
  <data name="Edytuj role" xml:space="preserve">
    <value>Edytuj role</value>
  </data>
  <data name="Edytuj rezerwację" xml:space="preserve">
    <value>Edytuj rezerwację</value>
  </data>
  <data name="Edytuj klienta" xml:space="preserve">
    <value>Edytuj klienta</value>
  </data>
  <data name="Edytuj dane pracownika" xml:space="preserve">
    <value>Edytuj dane pracownika</value>
  </data>
  <data name="Edytuj" xml:space="preserve">
    <value>Edytuj</value>
  </data>
  <data name="Dodaj nowego użytkownika" xml:space="preserve">
    <value>Dodaj nowego użytkownika</value>
  </data>
  <data name="Dodaj nowego pracownika" xml:space="preserve">
    <value>Dodaj nowego pracownika</value>
  </data>
  <data name="Dodaj nowego klienta" xml:space="preserve">
    <value>Dodaj nowego klienta</value>
  </data>
  <data name="Dodaj nową usługę" xml:space="preserve">
    <value>Dodaj nową usługę</value>
  </data>
  <data name="Dodaj nową rezerwację" xml:space="preserve">
    <value>Dodaj nową rezerwację</value>
  </data>
  <data name="Dodaj" xml:space="preserve">
    <value>Dodaj</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="Czy napewno chcesz usunąć tego klienta?" xml:space="preserve">
    <value>Czy napewno chcesz usunąć tego klienta?</value>
  </data>
  <data name="Czy na pewno chcesz usunąć tego użytkownika?" xml:space="preserve">
    <value>Czy na pewno chcesz usunąć tego użytkownika?</value>
  </data>
  <data name="Czy na pewno chcesz usunąć tego pracownika?" xml:space="preserve">
    <value>Czy na pewno chcesz usunąć tego pracownika?</value>
  </data>
  <data name="Czy na pewno chcesz usunąć tę usługę?" xml:space="preserve">
    <value>Czy na pewno chcesz usunąć tę usługę?</value>
  </data>
  <data name="Czy na pewno chcesz usunąć tę rezerwację?" xml:space="preserve">
    <value>Czy na pewno chcesz usunąć tę rezerwację?</value>
  </data>
  <data name="Cena" xml:space="preserve">
    <value>Cena</value>
  </data>
  <data name="Anuluj" xml:space="preserve">
    <value>Anuluj</value>
  </data>
  <data name="Akcje" xml:space="preserve">
    <value>Akcje</value>
  </data>
</root>