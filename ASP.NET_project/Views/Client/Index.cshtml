@using ASP.NET_project.ViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer


@model ClientListViewModel

<h1 class="mb-4 text-center text-purple">@Localizer["Lista klientów"]</h1>

<div class="mb-4">
    <a asp-action="Create" class="btn btn-purple"><i class="fas fa-user-plus"></i> @Localizer["Dodaj nowego klienta"]</a>
</div>

<div class="mb-4">
    <form asp-action="Index" method="get" class="form-inline">
        <label for="pageSize" class="mr-2">@Localizer["Ilość na stronę"]:</label>
        <select id="pageSize" name="pageSize" class="form-control mr-2">
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="5">5</option>
            <option value="10">10</option>
        </select>
        <button type="submit" class="btn btn-purple">@Localizer["Zastosuj"]</button>
    </form>
</div>

<table class="table table-striped table-hover shadow-sm">
    <thead class="thead-light">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Clients.FirstOrDefault().name)</th>
            <th>@Html.DisplayNameFor(model => model.Clients.FirstOrDefault().surname)</th>
            <th>@Html.DisplayNameFor(model => model.Clients.FirstOrDefault().email)</th>
            <th>@Html.DisplayNameFor(model => model.Clients.FirstOrDefault().phone)</th>
            <th>@Localizer[""]Akcje</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Clients)
        {
            <tr>
                <td>@item.name</td>
                <td>@item.surname</td>
                <td>@item.email</td>
                <td>@item.phone</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-outline-purple mr-1">@Localizer["Edytuj"]</a>
                    <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-sm btn-outline-danger">@Localizer["Usuń"]</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalPages > 1)
{
    <nav>
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link text-purple" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize">«</a>
                </li>
            }

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link @(i == Model.CurrentPage ? "text-white bg-purple" : "text-purple")"
                       asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-pageSize="@Model.PageSize">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link text-purple" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize">»</a>
                </li>
            }
        </ul>
    </nav>
}
